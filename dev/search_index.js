var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = DictionaryDistance","category":"page"},{"location":"#DictionaryDistance","page":"Home","title":"DictionaryDistance","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DictionaryDistance.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [DictionaryDistance]","category":"page"},{"location":"#DictionaryDistance.DictionaryDistance","page":"Home","title":"DictionaryDistance.DictionaryDistance","text":"module DictionaryDistance\n\nHelp evaluate how well a problem Y approx D * X has been solved. This module offers two main functions:\n\nalign_dictionaries, to help match found dictionaries D to the original dictionaries, and\nroc, with additional functions precision, recall, and f1score.\n\nAlso, the helper function nonzerovec is included.\n\nA typical workflow might look as follows:\n\nD = ...\nX = ...\nY = D*X\nres = ksvd(Y, size(D, 2))\n\nD_est, X_est = res.D, res.X\n(; assignment) = align_dictionaries(D, D_est)\nX_est_perm = X_est_perm[assignment, :]\n\nr = roc(nonzerovec(X[:]), nonzerovec(X_est_perm[:]))\n@show precision(r), recall(r), f1score(r)\n\n\n\n\n\n","category":"module"},{"location":"#DictionaryDistance.align_dictionaries-Tuple{AbstractMatrix, AbstractMatrix}","page":"Home","title":"DictionaryDistance.align_dictionaries","text":"align_dictionaries(D_lhs, D_rhs)\n\nFinds the best assignment of dictionary vectors of D_rhs and D_lhs. Specifically, this function returns assignments s.t. Drhs[:, assignment] ≈ Dlhs. If this comes frome some setup Y ≈ D * X then Xrhs[assignment, :] ≈ Xlhs.\n\n\n\n\n\n","category":"method"}]
}
